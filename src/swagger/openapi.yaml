# swagger/openapi.yaml
openapi: 3.1.0
info:
  title: OurBank API
  version: 1.0.0
  description: API documentation for the OurBank Application

servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://our-bank-six.vercel.app
    description: Production server

components:
  responses:
    ServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ServerError"

    AccessForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ServerError"

  schemas:
    ServerError:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
    Address:
      type: object
      required:
        - customerId
        - type
        - line1
        - city
        - state
        - zipCode
        - country
        - phoneIsdCode
        - phoneNumber
      properties:
        id:
          type: integer
        customerId:
          type: integer
        type:
          type: string
          enum: [Current, Permanent]
        line1:
          type: string
          maxLength: 100
        line2:
          type: string
          maxLength: 100
        line3:
          type: string
          maxLength: 100
        city:
          type: string
          maxLength: 50
        state:
          type: string
          maxLength: 50
        zipCode:
          type: string
          pattern: '^\d{6}$'
        country:
          type: string
          pattern: "^[A-Z]{2}$"
        phoneIsdCode:
          type: string
          pattern: '^\d{1,3}$'
        phoneNumber:
          type: string
          pattern: '^\d{10}$'

    Passport:
      type: object
      required:
        - passportNumber
        - issueDate
        - expiryDate
        - issuingCountry
        - customerId
      properties:
        id:
          type: integer
        passportNumber:
          type: string
          pattern: '^[A-Z]\d{7}$'
          description: The passport Number
        issueDate:
          type: string
          format: date
        expiryDate:
          type: string
          format: date
        issuingCountry:
          type: string
          maxLength: 50
        customerId:
          type: integer

    Customer:
      type: object
      required:
        - customerId
        - fullName
        - shortName
        - type
        - branchCode
        - firstName
        - lastName
        - gender
        - udid
        - dateOfBirth
        - residentStatus
        - authStatus
        - minor
      properties:
        id:
          type: integer
        customerId:
          type: string
          pattern: '^OB\d{9}$'
        fullName:
          type: string
          maxLength: 100
        shortName:
          type: string
          maxLength: 50
        type:
          type: string
          enum: [Individual, Corporate]
        branchCode:
          type: string
          pattern: '^\d{3}$'
        prefix:
          type: string
          enum: [Mr., Mrs., Ms., Dr.]
        firstName:
          type: string
          maxLength: 50
        middleName:
          type: string
          maxLength: 50
        lastName:
          type: string
          maxLength: 50
        gender:
          type: string
          enum: [Male, Female, Other]
        udid:
          type: string
          pattern: '^\d{16}$'
        dateOfBirth:
          type: string
          format: date-time
        residentStatus:
          type: string
          enum: [Resident, Non-Resident]
        authStatus:
          type: string
          enum: [Authorized, Unauthorized]
        relationshipManagerId:
          type: string
          nullable: true
        maker:
          type: string
        checker:
          type: string
          nullable: true
        minor:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        addresses:
          type: array
          items:
            $ref: "#/components/schemas/Address"
        passport:
          $ref: "#/components/schemas/Passport"

paths:
  /api/customers:
    get:
      summary: Retrieve a paginated list of customers
      tags: [Customers]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: The page number for pagination
        - in: query
          name: pageSize
          schema:
            type: integer
            default: 10
          description: Number of records per page
      responses:
        200:
          description: Successfully retrieved customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
        403:
          $ref: "#/components/responses/AccessForbiddenError"
        500:
          $ref: "#/components/responses/ServerError"

tags:
  - name: Customers
    description: Customer management endpoints
  - name: Accounts
    description: Account management endpoints
  - name: Transactions
    description: Transaction related endpoints
